>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...     [1, 2, 3],
...	[4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix == matrix_divided(matrix, 3)
False
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 'a']
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, [0]))
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6, 7]
... ]
>>> print(matrix_divided(matrix, 1))
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> matrix = [1, 2, 3]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 1e-300)) #doctest: +NORMALIZE_WHITESPACE
[[9.999999999999999e+299, 1.9999999999999998e+300, 3e+300],
 [3.9999999999999996e+300, 4.9999999999999997e+300, 6e+300]]
